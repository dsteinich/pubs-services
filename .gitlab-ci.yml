# .gitlab-ci.yml for pubs-services
#
# == Reference:
#   - https://sas.cr.usgs.gov/
#   - https://docs.gitlab.com/ee/ci/yaml/
#   - https://docs.gitlab.com/ee/ci/multi_project_pipelines.html
#
# == CI Variables:
#   The following CI variables are expected to be set outside of this file in
#   GitLab group variables.
#
#   CI_REGISTRY
#     Address to the Docker image registry.
#     This is a built-in Docker variable that, by default, points to the internal
#     Docker Image registry.
#
#   CI_REGISTRY_USER
#     The username for authenticating with the Docker image registry.
#     Defaults to "gitlab-ci-token"
#
#   CI_REGISTRY_PASS
#     The password. for authenticating with the Docker image registry.
#     Defaults to "$CI_JOB_TOKEN"
#
#   DEPLOY_TRIGGER_TOKEN
#     The API token for the deployment pipeline as configured on the deployment
#     repository.
#
#   DEPLOY_TRIGGER_URL
#     The API URL for the deployment pipeline as configured on the deployment
#     repository.
#
#   SAS_IMAGES_URL
#     The base URL for USGS SAS Docker images.
#
stages:
  - Docker Build
  - Trigger Deployment

variables:
  # The full name of the Docker image to produce, including the registry address.
  # In most cases, this should be left alone.
  IMAGE_NAME: ${CI_REGISTRY}/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}
  # How to tag the docker image. For now, tag an image per commit.
  IMAGE_TAG: ${CI_COMMIT_REF_NAME}-${CI_COMMIT_SHORT_SHA}

#
# == Docker Build
#
Build Docker Image:
  image: ${SAS_IMAGES_URL}/docker:19-latest
  stage: Docker Build
  services:
    - docker:dind
  tags:
    - docker
  only:
    variables:
      # We must run on a protected branch to access the CI_REGISTRY_PASS
      # variable.
      - $CI_COMMIT_REF_PROTECTED == "true"
  before_script:
    - docker login -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASS} ${CI_REGISTRY}
  script:
    # Use locally sourced images for building
    # These imagess are based on the official upstream images.
    # SAS_IMAGES_URL is a GitLab group variable set to the base URL for our
    # internal image registry.
    - docker build --pull
      -t ${IMAGE_NAME}:${IMAGE_TAG}
      --build-arg maven_image=${SAS_IMAGES_URL}/maven
      --build-arg openjdk_image=${SAS_IMAGES_URL}/openjdk
      --build-arg maven_image_tag=3.6.0-jdk-11
      --build-arg openjdk_image_tag=11.0.4-jre
      -f Dockerfile .
    - docker push ${IMAGE_NAME}:${IMAGE_TAG}

#
# == Deployment Triggers
#
# These jobs use 'curl' to make a request to the GitLab API to trigger the
# deployment repository's pipeline. The pipeline trigger is configured on
# the deployment repository under "Settings -> CI/CD -> Pipeline Triggers",
# which provides an API URL and token.
#
# References:
#   - https://docs.gitlab.com/ee/ci/triggers/README.html
#
.deploy_trigger:
  image: ${SAS_IMAGES_URL}/curl:master-latest
  stage: Trigger Deployment
  tags:
    - docker
  only:
    variables:
      # Limit the deployment triggers to protected refs.
      - $CI_COMMIT_REF_PROTECTED == "true"
  script:
    # In the trigger, pass along our image variables.
    - curl -X POST
      -F variables[PUBSWH_SERVICES_IMAGE]=${IMAGE_NAME}
      -F variables[PUBSWH_SERVICES_IMAGE_TAG]=${IMAGE_TAG}
      -F token=${DEPLOY_TRIGGER_TOKEN}
      -F ref=${DEPLOY_TRIGGER_REF}
      ${DEPLOY_TRIGGER_URL}

Development deployment:
  extends: .deploy_trigger
  only:
    refs:
      - master
  variables:
    # The branch on the deployment repository to trigger.
    DEPLOY_TRIGGER_REF: develop

Staging deployment:
  extends: .deploy_trigger
  only:
    refs:
      - master
  variables:
    # The branch on the deployment repository to trigger.
    DEPLOY_TRIGGER_REF: release