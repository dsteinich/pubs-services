<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 

<mapper namespace="base">

    <resultMap type="BaseDomain" id="result">
        <result property="insertDate" column="insert_date"/>
        <result property="insertUsername" column="insert_username"/>
        <result property="updateDate" column="update_date"/>
        <result property="updateUsername" column="update_username"/>
    </resultMap>

	<sql id="dateFormat">
		'YYYY-MM-DD'
	</sql>
	
	<sql id="clientId">
		sys_context( 'userenv', 'client_identifier')
	</sql>
	
    <select id="getClientId" resultType="String" useCache="false" >
        select <include refid="clientId"/>
          from dual
    </select>

    <sql id="auditCols">
        insert_date, insert_username, update_date, update_username
    </sql>

    <sql id="auditHosts">
        sysdate,
        audit_trail_util.get_username,
        sysdate,
        audit_trail_util.get_username
    </sql>

    <sql id="auditSets">
        update_date = sysdate,
        update_username = audit_trail_util.get_username
    </sql>

    <sql id="orderBy">
    	order by
    	<choose>
    		<when test="orderBy == 'title'">
    			pub.title asc,
    		</when>
    		<when test="orderBy == 'mpNewest'">
    			case when pub.insert_date = pub.update_date then 1 else 2 end,
    			pub.update_date desc,
    		</when>
    	</choose>
    	pub.publication_year desc nulls last,
    	pub.display_to_public_date desc,
        pub.publication_id desc
	</sql>

	<sql id="pagingHint">
        <if test="pageSize != null">
            /*+ first_rows(${pageSize}) */
        </if>
    </sql>

    <sql id="pagingRowLimit">
        <if test="pageSize != null">
        	<choose>
        		<when test="pageRowStart != null">
        			offset #{pageRowStart} rows fetch next
        		</when>
        		<otherwise>
        			fetch first
        		</otherwise>
        	</choose>
        	#{pageSize} rows only
        </if>
    </sql>
    
    <sql id="paging">
    	<if test="pageSize != null &amp;&amp; pageRowStart != null">
	    	<choose>
	    		<when test="pageRowStart > 0">
	    			offset #{pageRowStart} rows fetch next #{pageSize} rows only
	    		</when>
	    		<otherwise>
	    			fetch first #{pageSize} rows only
	    		</otherwise>
	    	</choose>
    	</if>
    </sql>

</mapper>