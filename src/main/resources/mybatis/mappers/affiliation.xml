<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 

<mapper namespace="affiliation">

    <resultMap id="result" type="Affiliation" extends="base.result">
        <id property="id" column="affiliation_id"/>
        <result property="text" column="name"/>
        <result property="active" column="is_active"/>
        <result property="usgs" column="is_cost_center"/>
        <discriminator javaType="String" column="is_cost_center">
            <case value="Y" resultMap="costCenterResult"/>
            <case value="N" resultMap="outsideAffiliationResult"/>
        </discriminator>
    </resultMap>

    <resultMap id="costCenterResult" type="CostCenter" extends="affiliation.result">
        <result property="ipdsId" column="affiliation_ipds_id"/>
    </resultMap>

    <resultMap id="outsideAffiliationResult" type="OutsideAffiliation" extends="affiliation.result"/>

    <sql id="baseCols">
        affiliation_id, name, is_cost_center, is_active,
        <include refid="base.auditCols"/>
    </sql>

    <sql id="costCenterCols">
        affiliation_ipds_id
    </sql>

    <sql id="baseHosts">
        #{id,jdbcType=NUMERIC},
        #{text,jdbcType=VARCHAR},
        #{usgs,jdbcType=VARCHAR},
        #{active,jdbcType=VARCHAR},
        <include refid="base.auditHosts"/>
    </sql>

     <sql id="costCenterHosts">
        <include refid="baseHosts"/>,
        #{ipdsId,jdbcType=VARCHAR}
    </sql>

    <sql id="baseSets">
        name = #{text,jdbcType=VARCHAR},
        is_cost_center = #{usgs,jdbcType=VARCHAR},
        is_active = #{active,jdbcType=VARCHAR},
        <include refid="base.auditSets"/>
    </sql>

    <sql id="costCenterSets">
        <include refid="baseSets"/>,
        affiliation_ipds_id = #{ipdsId,jdbcType=NUMERIC}
    </sql>

    <sql id="filters">
        <!-- This does not include the where tag so we can include it in other filters. -->
        <if test="id != null">
            and affiliation_id = #{id}
        </if>
        <if test="text != null">
            and upper(name) like upper(#{text}) || '%'
        </if>
        <if test="active != null">
            and is_active = #{active}
        </if>
        <if test="usgs != null">
            and is_cost_center = #{usgs}
        </if>
        <if test="ipdsId != null">
            and affiliation_ipds_id = #{ipdsId}
        </if>
        <if test="exactText != null">
            and upper(name) = upper(#{exactText})
        </if>
    </sql>

    <sql id="baseSelect">
        select <include refid="baseCols"/>,
               <include refid="costCenterCols"/>
          from affiliation
    </sql>
    
    <select id="getByContributor" parameterType="Integer" resultMap="result">
        <include refid="baseSelect"/>
         where affiliation_id in (
             select affiliation_id from contributor_affiliation
             where contributor_id = #{value,jdbcType=NUMERIC})
    </select>

    <select id="getById" parameterType="Integer" resultMap="result">
        <include refid="baseSelect"/>
         where affiliation_id = #{value,jdbcType=NUMERIC}
    </select>

    <select id="getByIdCostCenter" parameterType="Integer" resultMap="costCenterResult">
        <include refid="baseSelect"/>
         where affiliation_id = #{value,jdbcType=NUMERIC} and
               is_cost_center = 'Y'
    </select>

    <select id="getByIdOutsideAffiliation" parameterType="Integer" resultMap="outsideAffiliationResult">
        <include refid="baseSelect"/>
         where affiliation_id = #{value,jdbcType=NUMERIC} and
               is_cost_center = 'N'
    </select>

    <select id="getByMap" resultMap="result">
        <include refid="baseSelect"/>
        <where>
            <include refid="filters"/>
        </where>
        order by affiliation_id
    </select>

    <select id="getByMapCostCenter" resultMap="costCenterResult">
        <include refid="baseSelect"/>
        where is_cost_center = 'Y'
        <include refid="filters"/>
    </select>

    <select id="getByMapOutsideAffiliation" resultMap="outsideAffiliationResult">
        <include refid="baseSelect"/>
        where is_cost_center = 'N'
        <include refid="filters"/>
    </select>

    <insert id="addOutsideAffiliation" parameterType="OutsideAffiliation">
        <selectKey keyProperty="id" resultType="Integer" order="BEFORE">
            select affiliation_seq.nextval id from dual
        </selectKey>
        insert into affiliation (<include refid="baseCols"/>)
             values (<include refid="baseHosts"/>)
    </insert>

    <insert id="addCostCenter" parameterType="CostCenter">
        <selectKey keyProperty="id" resultType="Integer" order="BEFORE">
            select affiliation_seq.nextval id from dual
        </selectKey>
        insert into affiliation (<include refid="baseCols"/>,
                                 <include refid="costCenterCols"/>)
             values (<include refid="costCenterHosts"/>)
    </insert>

    <update id="updateOutsideAffiliation" parameterType="OutsideAffiliation">
        update affiliation
           set <include refid="baseSets"/>
           where affiliation_id = #{id,jdbcType=NUMERIC}
    </update>

    <update id="updateCostCenter" parameterType="CostCenter">
        update affiliation
           set <include refid="costCenterSets"/>
           where affiliation_id = #{id,jdbcType=NUMERIC}
    </update>

    <delete id="delete" parameterType="Integer">
        delete from affiliation
         where affiliation_id = #{value,jdbcType=NUMERIC}
    </delete>

</mapper>
