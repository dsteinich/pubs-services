<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 

<mapper namespace="publicationSeries">

    <resultMap id="result" type="PublicationSeries" extends="base.result">
        <id property="id" column="publication_series_id"/>
        <result property="publicationSubtype.id" column="publication_subtype_id"/>
        <result property="text" column="name"/>
        <result property="code" column="code"/>
        <result property="seriesDoiName" column="doi_name"/>
        <result property="printIssn" column="print_issn"/>
        <result property="onlineIssn" column="online_issn"/>
        <result property="active" column="is_active"/>
    </resultMap>

    <sql id="cols">
        publication_series_id, publication_subtype_id, name, code, doi_name, print_issn, online_issn, is_active,
        <include refid="base.auditCols"/>
    </sql>

	<sql id="hosts">
		#{id,jdbcType=NUMERIC},
		#{publicationSubtype.id,jdbcType=NUMERIC},
		#{text,jdbcType=VARCHAR},
		#{code,jdbcType=VARCHAR},
		#{seriesDoiName,jdbcType=VARCHAR},
		#{printIssn,jdbcType=VARCHAR},
		#{onlineIssn,jdbcType=VARCHAR},
		#{active,jdbcType=VARCHAR},
        <include refid="base.auditHosts"/>
	</sql>

	<sql id="sets">
		publication_series_id = #{id,jdbcType=NUMERIC},
		publication_subtype_id = #{publicationSubtype.id,jdbcType=NUMERIC},
		name = #{text,jdbcType=VARCHAR},
		code = #{code,jdbcType=VARCHAR},
		doi_name = #{seriesDoiName,jdbcType=VARCHAR},
		print_issn = #{printIssn,jdbcType=VARCHAR},
		online_issn = #{onlineIssn,jdbcType=VARCHAR},
		is_active = #{active,jdbcType=VARCHAR},
        <include refid="base.auditSets"/>
	</sql>

    <sql id="filters">
        <where>
            <if test="id != null">
                and publication_series_id = #{id}
            </if>
            <if test="publicationSubtypeId != null">
                and publication_subtype_id = #{publicationSubtypeId}
            </if>
            <if test="code != null">
                and code = #{code}
            </if>
            <if test="text != null">
                and upper(name) like upper(#{text}) || '%'
            </if>
	        <if test="active != null">
	            and is_active = #{active}
	        </if>
         </where>
    </sql>

    <sql id="baseSelect">
        select <include refid="cols"/>
          from publication_series
    </sql>

    <select id="getById" parameterType="Integer" resultMap="result">
        <include refid="baseSelect"/> 
         where publication_series_id = #{value,jdbcType=NUMERIC}
    </select>

    <select id="getByMap" parameterType="map" resultMap="result">
        <include refid="baseSelect"/>
        <include refid="filters"/>
        order by name
        <include refid="base.paging"/>
    </select>

    <select id="getCount" parameterType="map" resultType="Integer">
        select count(*)
          from publication_series
        <include refid="filters"/>
    </select>

	<insert id="add" parameterType="mpListPublication">
		<selectKey keyProperty="id" resultType="Integer" order="BEFORE">
			select publication_series_seq.nextval id from dual
		</selectKey>
		insert into publication_series (<include refid="cols"/>)
			values (<include refid="hosts"/>)
	</insert>

	<update id="update" parameterType="mpListPublication">
		update publication_series
		   set <include refid="sets"/>
		 where publication_series_id = #{id,jdbcType=NUMERIC}
	</update>
	
	<delete id="delete" parameterType="Integer">
		delete from publication_series
		 where publication_series_id = #{value,jdbcType=NUMERIC}
	</delete>

	<delete id="deleteByParent" parameterType="Integer">
		delete from publication_series
		 where publication_subtype_id = #{value,jdbcType=NUMERIC}
	</delete>

</mapper>
