<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 

<mapper namespace="contributor">

    <resultMap id="result" type="Contributor" extends="base.result">
        <id property="id" column="contributor_id"/>
        <result property="corporation" column="is_corporation"/>
        <result property="usgs" column="is_usgs"/>
        <discriminator javaType="String" column="is_corporation">
            <case value="Y" resultMap="corporateResult"/>
            <case value="N" resultMap="personResult"/>
        </discriminator>
    </resultMap>

    <resultMap id="corporateResult" type="CorporateContributor" extends="contributor.result">
        <result property="organization" column="literal"/>
    </resultMap>

    <resultMap id="personResult" type="PersonContributor" extends="contributor.result">
        <result property="family" column="first"/>
        <result property="given" column="given"/>
        <result property="suffix" column="suffix"/>
        <result property="email" column="email"/>
        <result property="ipdsContributorId" column="ipds_contributor_id"/>
        <discriminator javaType="String" column="is_usgs">
            <case value="Y" resultMap="usgsResult"/>
            <case value="N" resultMap="outsideResult"/>
        </discriminator>
    </resultMap>

    <resultMap id="usgsResult" type="UsgsContributor" extends="contributor.personResult">
        <association property="affiliation" column="affiliation_id" select="affiliation.getByIdCostCenter"/>
    </resultMap>

    <resultMap id="outsideResult" type="OutsideContributor" extends="contributor.personResult">
        <association property="affiliation" column="affiliation_id" select="affiliation.getByIdOutsideAffiliation"/>
    </resultMap>

    <sql id="baseCols">
        contributor_id, is_corporation, is_usgs
    </sql>

    <sql id="corpCols">
        literal
    </sql>

    <sql id="personCols">
        first, given, suffix, email, ipds_contributor_id, affiliation_id
    </sql>

    <sql id="baseHosts">
        #{id,jdbcType=NUMERIC},
        #{corporation,jdbcType=VARCHAR},
        #{usgs,jdbcType=VARCHAR}
    </sql>

     <sql id="corpHosts">
        <include refid="baseHosts"/>,
        #{organization,jdbcType=VARCHAR}
    </sql>

     <sql id="personHosts">
        <include refid="baseHosts"/>,
        #{family,jdbcType=VARCHAR},
        #{given,jdbcType=VARCHAR},
        #{suffix,jdbcType=VARCHAR},
        #{email,jdbcType=VARCHAR},
        #{ipdsContributorId,jdbcType=NUMERIC},
        #{affiliation.id,jdbcType=NUMERIC}
    </sql>

    <sql id="baseSets">
        is_corporation = #{corporation,jdbcType=VARCHAR},
        is_usgs = #{usgs,jdbcType=VARCHAR}
    </sql>

    <sql id="corpSets">
        <include refid="baseSets"/>,
        literal = #{organization,jdbcType=VARCHAR}
    </sql>

    <sql id="personSets">
        <include refid="baseSets"/>,
        first = #{family,jdbcType=VARCHAR},
        given = #{given,jdbcType=VARCHAR},
        suffix = #{suffix,jdbcType=VARCHAR},
        email = #{email,jdbcType=VARCHAR},
        ipds_contributor_id = #{ipdsContributorId,jdbcType=NUMERIC},
        affiliation_id = #{affiliation.id,jdbcType=NUMERIC}
    </sql>

    <sql id="filters">
        <if test="id != null">
            and contributor_id = #{id}
        </if>
        <if test="ipdsContributorId != null">
            and ipds_contributor_id = #{ipdsContributorId}
        </if>
        <if test="name != null">
            and (upper(first) like upper(#{name}) || '%'
              or upper(given) like upper(#{name}) || '%'
              or upper(suffix) like upper(#{name}) || '%'
              or upper(email) like upper(#{name}) || '%'
              or upper(literal) like upper(#{name}) || '%')
        </if>
        <if test="given != null">
            and upper(given) like upper(#{given}) || '%'
        </if>
        <if test="family != null">
            and upper(first) like upper(#{family}) || '%'
        </if>
        <if test="corporation != null">
            and is_corporation = #{corporation}
        </if>
    </sql>

    <sql id="baseSelect">
        select <include refid="baseCols"/>,
               <include refid="personCols"/>,
               <include refid="corpCols"/>
          from contributor
    </sql>

    <select id="getById" parameterType="Integer" resultMap="result">
        <include refid="baseSelect"/>
         where contributor_id = #{value,jdbcType=NUMERIC}
    </select>

    <select id="getByIdPersonContributor" parameterType="Integer" resultMap="result">
        <include refid="baseSelect"/>
         where contributor_id = #{value,jdbcType=NUMERIC} and
               is_corporation = 'N'
    </select>

    <select id="getByIdCorporateContributor" parameterType="Integer" resultMap="result">
        <include refid="baseSelect"/>
         where contributor_id = #{value,jdbcType=NUMERIC} and
               is_corporation = 'Y'
    </select>

    <select id="getByMap" resultMap="result">
        <include refid="baseSelect"/>
        <where>
            <include refid="filters"/>
        </where>
    </select>

    <select id="getByMapPersonContributor" resultMap="result">
        <include refid="baseSelect"/>
        where is_corporation = 'N'
        <include refid="filters"/>
    </select>

    <select id="getByMapCorporateContributor" resultMap="result">
        <include refid="baseSelect"/>
        where is_corporation = 'Y'
        <include refid="filters"/>
    </select>

    <insert id="addPersonContributor" parameterType="PersonContributor">
        <selectKey keyProperty="id" resultType="Integer" order="BEFORE">
            select contributor_seq.nextval id from dual
        </selectKey>
        insert into contributor (<include refid="baseCols"/>,
                                 <include refid="personCols"/>)
             values (<include refid="personHosts"/>)
    </insert>

    <insert id="addCorporateContributor" parameterType="CorporateContributor">
        <selectKey keyProperty="id" resultType="Integer" order="BEFORE">
            select contributor_seq.nextval id from dual
        </selectKey>
        insert into contributor (<include refid="baseCols"/>,
                                 <include refid="corpCols"/>)
             values (<include refid="corpHosts"/>)
    </insert>

    <update id="updatePersonContributor" parameterType="PersonContributor">
        update contributor
           set <include refid="personSets"/>
           where contributor_id = #{id,jdbcType=NUMERIC}
    </update>

    <update id="updateCorporateContributor" parameterType="CorporateContributor">
        update contributor
           set <include refid="corpSets"/>
           where contributor_id = #{id,jdbcType=NUMERIC}
    </update>

    <delete id="delete" parameterType="Integer">
        delete from contributor
         where contributor_id = #{value,jdbcType=NUMERIC}
    </delete>

</mapper>
