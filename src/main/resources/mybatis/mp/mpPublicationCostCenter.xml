<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 

<mapper namespace="mpPublicationCostCenter">

    <resultMap id="result" type="MpPublicationCostCenter" extends="publicationCostCenter.result"/>

    <insert id="add" parameterType="MpPublicationCostCenter">
        <selectKey keyProperty="id" resultType="Integer" order="BEFORE">
            select publication_cost_center_seq.nextval id from dual
        </selectKey>
        insert into mp_pub_cost_center (<include refid="publicationCostCenter.cols"/>)
             values (<include refid="publicationCostCenter.hosts"/>)
    </insert>

    <insert id="copyMpFromPw" parameterType="Integer">
        insert into mp_pub_cost_center (<include refid="publicationCostCenter.cols"/>)
            (select <include refid="publicationCostCenter.cols"/>
               from publication_cost_center
              where publication_id = #{value,jdbcType=NUMERIC})
    </insert>

    <sql id="baseSelect">
        select <include refid="publicationCostCenter.cols"/>
          from mp_pub_cost_center
    </sql>

    <select id="getById" parameterType="Integer" resultMap="result">
        <include refid="baseSelect"/>
         where publication_cost_center_id = #{value,jdbcType=NUMERIC}
    </select>

    <select id="getByPublication" parameterType="Integer" resultMap="result">
        <include refid="baseSelect"/>
         where publication_id = #{value,jdbcType=NUMERIC}
    </select>

    <select id="getByMap" resultMap="result">
        <include refid="baseSelect"/>
        <include refid="publicationCostCenter.filters"/>
    </select>

    <update id="update" parameterType="MpPublicationCostCenter">
        update mp_pub_cost_center
           set <include refid="publicationCostCenter.sets"/>
           where publication_cost_center_id = #{id,jdbcType=NUMERIC}
    </update>

	<update id="publish" parameterType="Integer">
		merge into publication_cost_center pw 
			using (<include refid="baseSelect"/>
			         where publication_id = #{value,jdbcType=NUMERIC}) mp 
			   on (mp.publication_cost_center_id = pw.publication_cost_center_id) 
			 when matched then update 
				  set pw.cost_center_id = mp.cost_center_id,
					  pw.insert_date = mp.insert_date,
					  pw.insert_username = mp.insert_username,
					  pw.update_date = sysdate,
					  pw.update_username = audit_trail_util.get_username
			 when not matched then insert (<include refid="publicationCostCenter.cols"/>)
				  values (mp.publication_cost_center_id, 	mp.publication_id, 		mp.cost_center_id, 
				          mp.insert_date,		 			mp.insert_username, 	sysdate,	 		audit_trail_util.get_username)
 
	</update>
	
	<delete id="publishDelete" parameterType="Integer">
		delete from publication_cost_center
		 where publication_id = #{value,jdbcType=NUMERIC} and
		       publication_cost_center_id not in (select publication_cost_center_id
		                                            from mp_pub_cost_center
		                                           where publication_id = #{value,jdbcType=NUMERIC}) 
	</delete>

    <delete id="delete" parameterType="Integer">
        delete from mp_pub_cost_center
         where publication_cost_center_id = #{value,jdbcType=NUMERIC}
    </delete>

    <delete id="deleteByParent" parameterType="Integer">
        delete from mp_pub_cost_center
         where publication_id = #{value,jdbcType=NUMERIC}
    </delete>

</mapper>
