<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 

<mapper namespace="pwPublication">

    <resultMap id="result" type="PwPublication" extends="publication.pwResult"/>

    <sql id="filters">
       	<if test="null != q">
       		and exists (select null
       		              from publication_index
       		             where publication.publication_id = publication_index.publication_id and
				               contains(publication_index.q, #{q}) > 0
    			       )
       	</if>

    	<include refid="publication.filters"/>

		<if test="null != listId">
			<if test="listId.length > 0">
				and 1 = 0 
			</if>
		</if>

		<if test="null != pubXDays">
			and trunc(display_to_public_date) &gt;= trunc(sysdate - #{pubXDays})
		</if>

		<if test="null != pubDateLow">
			and trunc(display_to_public_date) &gt;= to_date(#{pubDateLow}, <include refid="base.dateFormat"/>)
		</if>		
		
		<if test="null != pubDateHigh">
			and trunc(display_to_public_date) &lt;= to_date(#{pubDateHigh}, <include refid="base.dateFormat"/>)
		</if>		
		
		<if test="null != modXDays">
			and trunc(update_date) &gt;= trunc(sysdate - #{modXDays})
		</if>

		<if test="null != modDateLow">
			and trunc(display_to_public_date) &gt;= to_date(#{modDateLow}, <include refid="base.dateFormat"/>)
		</if>		
		
		<if test="null != modDateHigh">
			and trunc(display_to_public_date) &lt;= to_date(#{modDateHigh}, <include refid="base.dateFormat"/>)
		</if>		
		
        <if test="contributor != null and contributor.length > 0">
        	and exists (select null
               	          from publication_contributor
               	               join contributor
               	                 on publication_contributor.contributor_id = contributor.contributor_id 
                         where publication.publication_id = publication_contributor.publication_id and
              				   <foreach item="a" collection="contributor" open="(" separator="or" close=")"> 
	                			   upper(family) like '%' || upper(#{a}) || '%' or
		                		   upper(given) like '%' || upper(#{a}) || '%' or
		                		   upper(literal) like '%' || upper(#{a}) || '%'
	                		   </foreach>
	                   )
        </if>
           
        <if test="contributingOffice != null and contributingOffice.length > 0">
            and exists (select null
               	          from publication_cost_center
               	               join affiliation
               	                 on publication_cost_center.cost_center_id = affiliation.affiliation_id 
           	             where publication.publication_id = publication_cost_center.publication_id and
               				   <foreach item="co" collection="contributingOffice" open="(" separator="or" close=")"> 
	                			   upper(name) like '%' || upper(#{co}) || '%'
	                		   </foreach>
	                   )
        </if>
    </sql>

	<!-- NOTE - this query DOES NOT use the VPD -->
    <select id="getById" parameterType="Integer" resultMap="result">
        select <include refid="publication.cols"/>
          from publication
         where publication_id = #{value,jdbcType=VARCHAR}
    </select>
	<!-- END_NOTE - this query DOES NOT use the VPD -->



	<!-- NOTE - the remaining queries DO use the VPD -->
    <sql id="baseSelectPublic">
        select <include refid="publication.cols"/>
          from public_publication publication
    </sql>

	
    <select id="getByIndexId" parameterType="String" resultMap="result">
        <include refid="baseSelectPublic"/>
         where index_id = #{value,jdbcType=VARCHAR}
    </select>

    <select id="getByMap" parameterType="map" resultMap="result">
        <include refid="base.pagingTop"/>
        <include refid="baseSelectPublic"/>
        <where>
        	<include refid="filters"/>
        </where>
        <include refid="base.orderBy"/>
        <include refid="base.pagingBottom"/>
    </select>

    <select id="getCount" parameterType="map" resultType="Integer">
        select count(*)
          from public_publication publication
        <where>
        	<include refid="filters"/>
        </where>
    </select>

</mapper>
