<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 

<mapper namespace="publication">

    <resultMap id="result" type="Publication" extends="base.result">
        <id property="id" column="publication_id"/>
        <result property="indexId" column="index_id"/>
        <result property="displayToPublicDate" column="display_to_public_date"/>
        <result property="publicationYear" column="publication_year"/>
        <result property="seriesNumber" column="series_number"/>
        <result property="subseriesTitle" column="subseries_title"/>
        <result property="chapter" column="chapter"/>
        <result property="subchapterNumber" column="subchapter"/>
        <result property="title" column="title"/>
        <result property="docAbstract" column="abstract"/>
        <result property="largerWorkTitle" column="larger_work_title"/>
        <result property="conferenceTitle" column="conference_title"/>
        <result property="conferenceDate" column="conference_date"/>
        <result property="conferenceLocation" column="conference_location"/>
        <result property="language" column="language"/>
        <result property="publisher" column="publisher"/>
        <result property="publisherLocation" column="publisher_location"/>
        <result property="doi" column="doi_name"/>
        <result property="issn" column="issn"/>
        <result property="isbn" column="isbn"/>
        <result property="collaboration" column="collaboration"/>
        <result property="usgsCitation" column="usgs_citation"/>
        <result property="contact.id" column="contact_id"/>
        <result property="productDescription" column="product_description"/>
        <result property="startPage" column="start_page"/>
        <result property="endPage" column="end_page"/>
        <result property="numberOfPages" column="number_of_pages"/>
        <result property="onlineOnly" column="online_only"/>
        <result property="additionalOnlineFiles" column="additional_online_files"/>
        <result property="temporalStart" column="temporal_start"/>
        <result property="temporalEnd" column="temporal_end"/>
        <result property="notes" column="notes"/>
        <result property="ipdsId" column="ipds_id"/>
        <result property="updateDate" column="update_date"/>
        <result property="ipdsReviewProcessState" column="ipds_review_process_state"/>
        <result property="scale" column="scale"/>
        <result property="projection" column="projection"/>
        <result property="datum" column="datum"/>
        <result property="country" column="country"/>
        <result property="state" column="state"/>
        <result property="county" column="county"/>
        <result property="city" column="city"/>
        <result property="otherGeospatial" column="other_geospatial"/>
        <result property="geographicExtents" column="geographic_extents"/>
        <result property="volume" column="volume"/>
        <result property="issue" column="issue"/>
        <association property="publicationType" column="publication_type_id" select="publicationType.getById"/>
        <association property="publicationSubtype" column="publication_subtype_id" select="publicationSubtype.getById"/>
        <association property="largerWorkType" column="larger_work_type_id" select="publicationType.getById"/>
        <association property="largerWorkSubtype" column="larger_work_subtype_id" select="publicationSubtype.getById"/>
        <association property="seriesTitle" column="publication_series_id" select="publicationSeries.getById"/>
<!--         <association property="contact" column="contact_id" select="contact.getById"/> -->
    </resultMap>

    <resultMap id="genericResult" type="Publication" extends="result">
        <discriminator javaType="String" column="tname">
            <case value="mp_publication" resultMap="mpResult"/>
            <case value="publication" resultMap="pwResult"/>
        </discriminator>
	</resultMap>
	
    <resultMap id="mpResult" type="Publication" extends="genericResult">
        <collection property="costCenters" column="publication_id" select="mpPublicationCostCenter.getByPublication"/>
        <collection property="authors" column="publication_id" select="mpPublicationContributor.getAuthorsByPublication"/>
        <collection property="editors" column="publication_id" select="mpPublicationContributor.getEditorsByPublication"/>
        <collection property="links" column="publication_id" select="mpPublicationLink.getByPublication"/>
    </resultMap>
	
    <resultMap id="pwResult" type="Publication" extends="genericResult">
        <collection property="costCenters" column="publication_id" select="pwPublicationCostCenter.getByPublication"/>
        <collection property="authors" column="publication_id" select="pwPublicationContributor.getAuthorsByPublication"/>
        <collection property="editors" column="publication_id" select="pwPublicationContributor.getEditorsByPublication"/>
        <collection property="links" column="publication_id" select="pwPublicationLink.getByPublication"/>
    </resultMap>

    <sql id="cols">
        publication_id,
        index_id,
        display_to_public_date,
        publication_year,
        publication_type_id,
        publication_subtype_id,
        publication_series_id,
        series_number,
        subseries_title,
        chapter,
        subchapter,
        title,
        abstract,
        larger_work_type_id,
        larger_work_title,
        larger_work_subtype_id,
        conference_title,
        conference_date,
        conference_location,
        language,
        publisher,
        publisher_location,
        doi_name,
        issn,
        isbn,
        collaboration,
        usgs_citation,
        contact_id,
        product_description,
        start_page,
        end_page,
        number_of_pages,
        online_only,
        additional_online_files,
        temporal_start,
        temporal_end,
        notes,
        ipds_id,
        ipds_review_process_state,
        ipds_internal_id,
        scale,
        projection,
        datum,
        country,
        state,
        county,
        city,
        other_geospatial,
        geographic_extents,
        volume,
        issue,
        <include refid="base.auditCols"/>
    </sql>

    <sql id="hosts">
        #{id,jdbcType=NUMERIC},
        nvl(#{indexId,jdbcType=VARCHAR},#{id,jdbcType=NUMERIC}),
        #{displayToPublicDate,jdbcType=DATE},
        #{publicationYear,jdbcType=VARCHAR},
        #{publicationType.id,jdbcType=NUMERIC},
        #{publicationSubtype.id,jdbcType=NUMERIC},
        #{seriesTitle.id,jdbcType=NUMERIC},
        #{seriesNumber,jdbcType=VARCHAR},
        #{subseriesTitle,jdbcType=VARCHAR},
        #{chapter,jdbcType=VARCHAR},
        #{subchapterNumber,jdbcType=VARCHAR},
        #{title,jdbcType=VARCHAR},
        #{docAbstract,jdbcType=CLOB},
        #{largerWorkType.id,jdbcType=NUMERIC},
        #{largerWorkTitle,jdbcType=VARCHAR},
        #{largerWorkSubtype.id,jdbcType=NUMERIC},
        #{conferenceTitle,jdbcType=VARCHAR},
        #{conferenceDate,jdbcType=VARCHAR},
        #{conferenceLocation,jdbcType=VARCHAR},
        #{language,jdbcType=VARCHAR},
        #{publisher,jdbcType=VARCHAR},
        #{publisherLocation,jdbcType=VARCHAR},
        #{doi,jdbcType=VARCHAR},
        #{issn,jdbcType=VARCHAR},
        #{isbn,jdbcType=VARCHAR},
        #{collaboration,jdbcType=VARCHAR},
        #{usgsCitation,jdbcType=VARCHAR},
        #{contact.id,jdbcType=NUMERIC},
        #{productDescription,jdbcType=VARCHAR},
        #{startPage,jdbcType=NUMERIC},
        #{endPage,jdbcType=NUMERIC},
        #{numberOfPages,jdbcType=NUMERIC},
        #{onlineOnly,jdbcType=VARCHAR},
        #{additionalOnlineFiles,jdbcType=VARCHAR},
        #{temporalStart,jdbcType=DATE},
        #{temporalEnd,jdbcType=DATE},
        #{notes,jdbcType=VARCHAR},
        #{ipdsId,jdbcType=VARCHAR},
        #{ipdsReviewProcessState,jdbcType=VARCHAR},
        #{ipdsInternalId,jdbcType=NUMERIC},
        #{scale,jdbcType=NUMERIC},
        #{projection,jdbcType=VARCHAR},
        #{datum,jdbcType=VARCHAR},
        #{country,jdbcType=VARCHAR},
        #{state,jdbcType=VARCHAR},
        #{county,jdbcType=VARCHAR},
        #{city,jdbcType=VARCHAR},
        #{otherGeospatial,jdbcType=VARCHAR},
        #{geographicExtents,jdbcType=VARCHAR},
        #{volume,jdbcType=VARCHAR},
        #{issue,jdbcType=VARCHAR},
        <include refid="base.auditHosts"/>
    </sql>

    <sql id="sets">
        index_id = nvl(#{indexId,jdbcType=VARCHAR},#{id,jdbcType=NUMERIC}),
        display_to_public_date = #{displayToPublicDate,jdbcType=DATE},
        publication_year = #{publicationYear,jdbcType=VARCHAR},
        publication_type_id = #{publicationType.id,jdbcType=NUMERIC},
        publication_subtype_id = #{publicationSubtype.id,jdbcType=NUMERIC},
        publication_series_id = #{seriesTitle.id,jdbcType=NUMERIC},
        series_number = #{seriesNumber,jdbcType=VARCHAR},
        subseries_title = #{subseriesTitle,jdbcType=VARCHAR},
        chapter = #{chapter,jdbcType=VARCHAR},
        subchapter = #{subchapterNumber,jdbcType=VARCHAR},
        title = #{title,jdbcType=VARCHAR},
        abstract = #{docAbstract,jdbcType=CLOB},
        larger_work_type_id = #{largerWorkType.id,jdbcType=NUMERIC},
        larger_work_title = #{largerWorkTitle,jdbcType=VARCHAR},
        larger_work_subtype_id = #{largerWorkSubtype.id,jdbcType=NUMERIC},
        conference_title = #{conferenceTitle,jdbcType=VARCHAR},
        conference_date = #{conferenceDate,jdbcType=VARCHAR},
        conference_location = #{conferenceLocation,jdbcType=VARCHAR},
        language = #{language,jdbcType=VARCHAR},
        publisher = #{publisher,jdbcType=VARCHAR},
        publisher_location = #{publisherLocation,jdbcType=VARCHAR},
        doi_name = #{doi,jdbcType=VARCHAR},
        issn = #{issn,jdbcType=VARCHAR},
        isbn = #{isbn,jdbcType=VARCHAR},
        collaboration = #{collaboration,jdbcType=VARCHAR},
        usgs_citation = #{usgsCitation,jdbcType=VARCHAR},
        contact_id = #{contact.id,jdbcType=NUMERIC},
        product_description = #{productDescription,jdbcType=VARCHAR},
        start_page = #{startPage,jdbcType=NUMERIC},
        end_page = #{endPage,jdbcType=NUMERIC},
        number_of_pages = #{numberOfPages,jdbcType=NUMERIC},
        online_only = #{onlineOnly,jdbcType=VARCHAR},
        additional_online_files = #{additionalOnlineFiles,jdbcType=VARCHAR},
        temporal_start = #{temporalStart,jdbcType=DATE},
        temporal_end = #{temporalEnd,jdbcType=DATE},
        notes = #{notes,jdbcType=VARCHAR},
        ipds_id = #{ipdsId,jdbcType=VARCHAR},
        ipds_review_process_state = #{ipdsReviewProcessState,jdbcType=VARCHAR},
        ipds_internal_id = #{ipdsInternalId,jdbcType=NUMERIC},
        scale = #{scale,jdbcType=NUMERIC},
        projection = #{projection,jdbcType=VARCHAR},
        datum = #{datum,jdbcType=VARCHAR},
        country = #{country,jdbcType=VARCHAR},
        state = #{state,jdbcType=VARCHAR},
        county = #{county,jdbcType=VARCHAR},
        city = #{city,jdbcType=VARCHAR},
        other_geospatial = #{otherGeospatial,jdbcType=VARCHAR},
        geographic_extents = #{geographicExtents,jdbcType=VARCHAR},
        volume = #{volume,jdbcType=VARCHAR},
        issue = #{issue,jdbcType=VARCHAR},
        <include refid="base.auditSets"/>
    </sql>
    
    <sql id="likeTerm">
    	like '%' || upper(#{term}) || '%'
    </sql>
    
    <sql id="singleSearchTermFilter">
				   upper(title) <include refid="publication.likeTerm"/>
				or upper(abstract) <include refid="publication.likeTerm"/>
				or upper(subseries_title) <include refid="publication.likeTerm"/>
				or upper(series_number) <include refid="publication.likeTerm"/>
				or upper(index_id) <include refid="publication.likeTerm"/>
				or to_char(publication_id) = #{term}
				or upper(ipds_id) <include refid="publication.likeTerm"/>
				or upper(publication_year) <include refid="publication.likeTerm"/>
				
				<!-- series name -->
				or publication_id in (select publication_series_id 
	              		                from publication_series
	              		               where upper(name) <include refid="publication.likeTerm"/>)
    </sql>

    <sql id="filters">
        	<if test="null != IPDS_ID">
        		and ipds_id = #{IPDS_ID}
        	</if>
        	
       		<if test="title != null and title.length > 0">
       			and (
				<foreach item="t" collection="title" open="" separator="or" close=""> 
                	upper(title) like '%' || upper(#{t}) || '%'
                </foreach>
                )
            </if>
            
            <if test="abstract != null and abstract.length > 0">
       			and (
				<foreach item="a" collection="abstract" open="" separator="or" close=""> 
                	upper(abstract) like '%' || upper(#{a}) || '%'
                </foreach>
                )
            </if>

            <if test="id != null and id.length > 0">
                and (
                <foreach item="i" collection="id" open="" separator="or" close=""> 
                	publication_id = #{i}
				</foreach>
                )
            </if>
            
            <if test="indexId != null and indexId.length > 0">
                and (
                <foreach item="i" collection="indexId" open="" separator="or" close=""> 
                	upper(index_id) = upper(#{i})
                </foreach>
                )
            </if>
            
            <if test="ipdsId != null and ipdsId.length > 0">
                and (
                <foreach item="i" collection="ipdsId" open="" separator="or" close=""> 
                	ipds_id = #{i}
                </foreach>
                )
            </if>
            
            <if test="year != null and year.length > 0">
            	and (
                <foreach item="y" collection="year" open="" separator="or" close=""> 
                	publication_year = #{y}
               	</foreach>
                )
            </if>
            
            <if test="yearStart != null">
            	and publication_year &gt;= #{yearStart}
            </if>
            
            <if test="yearEnd != null">
            	and publication_year &lt;= #{yearEnd}
            </if>
            
            <if test="reportSeries != null and reportSeries.length > 0">
                and publication_series_id in (select publication_series_id 
               		                            from publication_series
               		                           where
               		<foreach item="r" collection="reportSeries" open="" separator="or" close=""> 
                	 upper(name) like '%' || upper(#{r}) || '%'
                	 </foreach>
                	 )
            </if>
            
            <if test="reportNumber != null and reportNumber.length > 0">
            	and (
                <foreach item="r" collection="reportNumber" open="" separator="or" close=""> 
                	upper(series_number) like '%' || upper(#{r}) || '%'
               	</foreach>
                )
            </if>
    </sql>

    <sql id="allSelect">
        select *
          from (select <include refid="cols"/>, 'mp_publication' tname
                  from mp_publication
                 <include refid="mpPublication.filters"/>
                union all
                select <include refid="cols"/>, 'publication' tname
                  from publication
                 where publication_id in (select publication_id from publication
                                          minus
                                          select publication_id from mp_publication)
                 <include refid="pwPublication.filters"/>
               )
    </sql>

    <select id="getById" parameterType="Integer" resultMap="genericResult">
        select *
          from (select <include refid="cols"/>, 'mp_publication' tname
                  from mp_publication
                union all
                select <include refid="cols"/>, 'publication' tname
                  from publication
                 where publication_id in (select publication_id from publication
                                          minus
                                          select publication_id from mp_publication)
               )
           where publication_id = #{value,jdbcType=VARCHAR}
    </select>

    <select id="getByMap" parameterType="map" resultMap="genericResult">
        <include refid="base.pagingTop"/>
        <include refid="allSelect"/>
        <include refid="base.orderBy"/>
        <include refid="base.pagingBottom"/>
    </select>

    <select id="getCount" parameterType="map" resultType="Integer">
        select count(*)
          from (select publication_id
                  from mp_publication
                 <include refid="mpPublication.filters"/>
                union all
                select publication_id
                  from publication
                 where publication_id in (select publication_id from publication
                                          minus
                                          select publication_id from mp_publication)
                 <include refid="pwPublication.filters"/>
               )
    </select>

</mapper>
