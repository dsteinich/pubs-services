<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 

<mapper namespace="publication">

    <resultMap id="result" type="Publication" extends="base.result">
        <id property="id" column="publication_id"/>
        <result property="indexId" column="index_id"/>
        <result property="displayToPublicDate" column="display_to_public_date"/>
        <result property="publicationYear" column="publication_year"/>
        <result property="seriesNumber" column="series_number"/>
        <result property="subseriesTitle" column="subseries_title"/>
        <result property="chapter" column="chapter"/>
        <result property="subchapterNumber" column="subchapter"/>
        <result property="title" column="title"/>
        <result property="docAbstract" column="abstract"/>
        <result property="largerWorkTitle" column="larger_work_title"/>
        <result property="conferenceTitle" column="conference_title"/>
        <result property="conferenceDate" column="conference_date"/>
        <result property="conferenceLocation" column="conference_location"/>
        <result property="language" column="language"/>
        <result property="publisher" column="publisher"/>
        <result property="publisherLocation" column="publisher_location"/>
        <result property="doi" column="doi_name"/>
        <result property="issn" column="issn"/>
        <result property="isbn" column="isbn"/>
        <result property="collaboration" column="collaboration"/>
        <result property="usgsCitation" column="usgs_citation"/>
        <result property="contact.id" column="contact_id"/>
        <result property="productDescription" column="product_description"/>
        <result property="startPage" column="start_page"/>
        <result property="endPage" column="end_page"/>
        <result property="numberOfPages" column="number_of_pages"/>
        <result property="onlineOnly" column="online_only"/>
        <result property="additionalOnlineFiles" column="additional_online_files"/>
        <result property="temporalStart" column="temporal_start"/>
        <result property="temporalEnd" column="temporal_end"/>
        <result property="notes" column="notes"/>
        <result property="ipdsId" column="ipds_id"/>
        <result property="updateDate" column="update_date"/>
        <result property="ipdsReviewProcessState" column="ipds_review_process_state"/>
        <result property="ipdsInternalId" column="ipds_internal_id"/>
        <association property="publicationType" column="publication_type_id" select="publicationType.getById"/>
        <association property="largerWorkType" column="larger_work_type_id" select="publicationType.getById"/>
        <association property="publicationSubtype" column="publication_subtype_id" select="publicationSubtype.getById"/>
        <association property="seriesTitle" column="publication_series_id" select="publicationSeries.getById"/>
<!--         <association property="contact" column="contact_id" select="contact.getById"/> -->
    </resultMap>

    <sql id="cols">
        publication_id,
        index_id,
        display_to_public_date,
        publication_year,
        publication_type_id,
        publication_subtype_id,
        publication_series_id,
        series_number,
        subseries_title,
        chapter,
        subchapter,
        title,
        abstract,
        larger_work_type_id,
        larger_work_title,
        conference_title,
        conference_date,
        conference_location,
        language,
        publisher,
        publisher_location,
        doi_name,
        issn,
        isbn,
        collaboration,
        usgs_citation,
        contact_id,
        product_description,
        start_page,
        end_page,
        number_of_pages,
        online_only,
        additional_online_files,
        temporal_start,
        temporal_end,
        notes,
        ipds_id,
        ipds_review_process_state,
        ipds_internal_id,
        <include refid="base.auditCols"/>
    </sql>

    <sql id="hosts">
        #{id,jdbcType=NUMERIC},
        nvl(#{indexId,jdbcType=VARCHAR},#{id,jdbcType=NUMERIC}),
        #{displayToPublicDate,jdbcType=DATE},
        #{publicationYear,jdbcType=VARCHAR},
        #{publicationType.id,jdbcType=NUMERIC},
        #{publicationSubtype.id,jdbcType=NUMERIC},
        #{seriesTitle.id,jdbcType=NUMERIC},
        #{seriesNumber,jdbcType=VARCHAR},
        #{subseriesTitle,jdbcType=VARCHAR},
        #{chapter,jdbcType=VARCHAR},
        #{subchapterNumber,jdbcType=VARCHAR},
        #{title,jdbcType=VARCHAR},
        #{docAbstract,jdbcType=CLOB},
        #{largerWorkType.id,jdbcType=NUMERIC},
        #{largerWorkTitle,jdbcType=VARCHAR},
        #{conferenceTitle,jdbcType=VARCHAR},
        #{conferenceDate,jdbcType=VARCHAR},
        #{conferenceLocation,jdbcType=VARCHAR},
        #{language,jdbcType=VARCHAR},
        #{publisher,jdbcType=VARCHAR},
        #{publisherLocation,jdbcType=VARCHAR},
        #{doi,jdbcType=VARCHAR},
        #{issn,jdbcType=VARCHAR},
        #{isbn,jdbcType=VARCHAR},
        #{collaboration,jdbcType=VARCHAR},
        #{usgsCitation,jdbcType=VARCHAR},
        #{contact.id,jdbcType=NUMERIC},
        #{productDescription,jdbcType=VARCHAR},
        #{startPage,jdbcType=NUMERIC},
        #{endPage,jdbcType=NUMERIC},
        #{numberOfPages,jdbcType=NUMERIC},
        #{onlineOnly,jdbcType=VARCHAR},
        #{additionalOnlineFiles,jdbcType=VARCHAR},
        #{temporalStart,jdbcType=DATE},
        #{temporalEnd,jdbcType=DATE},
        #{notes,jdbcType=VARCHAR},
        #{ipdsId,jdbcType=VARCHAR},
        #{ipdsReviewProcessState,jdbcType=VARCHAR},
        #{ipdsInternalId,jdbcType=NUMERIC},
        <include refid="base.auditHosts"/>
    </sql>

    <sql id="sets">
        index_id = nvl(#{indexId,jdbcType=VARCHAR},#{id,jdbcType=NUMERIC}),
        display_to_public_date = #{displayToPublicDate,jdbcType=DATE},
        publication_year = #{publicationYear,jdbcType=VARCHAR},
        publication_type_id = #{publicationType.id,jdbcType=NUMERIC},
        publication_subtype_id = #{publicationSubtype.id,jdbcType=NUMERIC},
        publication_series_id = #{seriesTitle.id,jdbcType=NUMERIC},
        series_number = #{seriesNumber,jdbcType=VARCHAR},
        subseries_title = #{subseriesTitle,jdbcType=VARCHAR},
        chapter = #{chapter,jdbcType=VARCHAR},
        subchapter = #{subchapterNumber,jdbcType=VARCHAR},
        title = #{title,jdbcType=VARCHAR},
        abstract = #{docAbstract,jdbcType=CLOB},
        larger_work_type_id = #{largerWorkType.id,jdbcType=NUMERIC},
        larger_work_title = #{largerWorkTitle,jdbcType=VARCHAR},
        conference_title = #{conferenceTitle,jdbcType=VARCHAR},
        conference_date = #{conferenceDate,jdbcType=VARCHAR},
        conference_location = #{conferenceLocation,jdbcType=VARCHAR},
        language = #{language,jdbcType=VARCHAR},
        publisher = #{publisher,jdbcType=VARCHAR},
        publisher_location = #{publisherLocation,jdbcType=VARCHAR},
        doi_name = #{doi,jdbcType=VARCHAR},
        issn = #{issn,jdbcType=VARCHAR},
        isbn = #{isbn,jdbcType=VARCHAR},
        collaboration = #{collaboration,jdbcType=VARCHAR},
        usgs_citation = #{usgsCitation,jdbcType=VARCHAR},
        contact_id = #{contact.id,jdbcType=NUMERIC},
        product_description = #{productDescription,jdbcType=VARCHAR},
        start_page = #{startPage,jdbcType=NUMERIC},
        end_page = #{endPage,jdbcType=NUMERIC},
        number_of_pages = #{numberOfPages,jdbcType=NUMERIC},
        online_only = #{onlineOnly,jdbcType=VARCHAR},
        additional_online_files = #{additionalOnlineFiles,jdbcType=VARCHAR},
        temporal_start = #{temporalStart,jdbcType=DATE},
        temporal_end = #{temporalEnd,jdbcType=DATE},
        notes = #{notes,jdbcType=VARCHAR},
        ipds_id = #{ipdsId,jdbcType=VARCHAR},
        ipds_review_process_state = #{ipdsReviewProcessState,jdbcType=VARCHAR},
        ipds_internal_id = #{ipdsInternalId,jdbcType=NUMERIC},
        <include refid="base.auditSets"/>
    </sql>
    
    <sql id="singleSearchTermFilter">
    <!-- single search term needs to or/and correctly -->
       	<if test="searchTerms != null and searchTerms.length > 0">
       		and 
			<foreach item="term" collection="searchTerms" open=""
					 separator="and" close=""> 
			(	
			<!-- various fields -->	
			upper(title) LIKE '%' || upper(#{term}) || '%'
			or upper(abstract) LIKE '%' || upper(#{term}) || '%'
			or upper(subseries_title) LIKE '%' || upper(#{term}) || '%'
			or upper(series_number) LIKE '%' || upper(#{term}) || '%'
			or upper(index_id) LIKE '%' || upper(#{term}) || '%'
			or upper(publication_id) LIKE '%' || upper(#{term}) || '%'
			or upper(ipds_id) LIKE '%' || upper(#{term}) || '%'
			or upper(series_number) LIKE '%' || upper(#{term}) || '%'
			or upper(publication_year) LIKE '%' || upper(#{term}) || '%'
			
			<!-- series name -->
			or publication_id in 
              		(select publication_series_id 
              		from publication_series
              		where upper(name) like '%' || upper(#{term}) || '%')
            		
			<!--  contributing office -->
			<!-- TODO: refactor and split to mypubs and regular pubs versions -->
			or publication_id in (
               	select publication_id 
               	from mp_pub_cost_center 
               	where cost_center_id in 
               		(select affiliation_id 
               		from affiliation 
               		where is_cost_center = 'Y' and
               		      upper(name) like '%' || upper(#{term}) || '%')
				union
				select publication_id 
				from publication_cost_center 
				where cost_center_id in 
					(select affiliation_id 
					from affiliation 
					where is_cost_center = 'Y' and
					      upper(name) like '%' || upper(#{term}) || '%')
               )
               
               <!-- author -->
               <!-- TODO: refactor and split to mypubs and regular pubs versions -->
               or publication_id in (
               select publication_id 
               	from mp_pub_contributor 
               	where contributor_id in 
               		(select contributor_id 
               		from contributor
               		where upper(first) || ' ' || upper(given) like '%' || upper(#{term}) || '%')
				union
				select publication_id 
				from publication_contributor 
				where contributor_id in 
					(select contributor_id 
               		from contributor
               		where upper(first) || ' ' || upper(given) like '%' || upper(#{term}) || '%')
               ) 
              )
			</foreach>
       	</if><!-- END single search terms section -->
    </sql>

    <sql id="filters">
        <where>
        	<if test="null != IPDS_ID">
        		and ipds_id = #{IPDS_ID}
        	</if>
        	
        	<include refid="publication.singleSearchTermFilter"/>
        	
       		<if test="title != null and title.length > 0">
       			and (
				<foreach item="t" collection="title" open=""
						 separator="or" close=""> 
                	upper(title) like '%' || upper(#{t}) || '%'
                </foreach>
                )
            </if>
            
            <if test="abstract != null and abstract.length > 0">
       			and (
				<foreach item="a" collection="abstract" open=""
						 separator="or" close=""> 
                	upper(abstract) like '%' || upper(#{a}) || '%'
                </foreach>
                )
            </if>
            
            <!-- TODO: refactor and split to mypubs and regular pubs versions -->
            <if test="author != null and author.length > 0">
                and publication_id in (
                select publication_id 
                	from mp_pub_contributor 
                	where contributor_id in 
                		(select contributor_id 
                		from contributor
                		where 
                		<foreach item="a" collection="author" open=""
								 separator="or" close=""> 
		                	upper(first) || ' ' || upper(given) like '%' || upper(#{a}) || '%'
		                </foreach>
                		)
					union
					select publication_id 
					from publication_contributor 
					where contributor_id in 
						(select contributor_id 
                		from contributor
                		where 
                		<foreach item="a" collection="author" open=""
								 separator="or" close=""> 
		                	upper(first) || ' ' || upper(given) like '%' || upper(#{a}) || '%'
		                </foreach>
		                )
                ) 
            </if>
            
            <if test="id != null and id.length > 0">
                and (
                <foreach item="i" collection="id" open=""
								 separator="or" close=""> 
                	publication_id = #{i}
				</foreach>
                )
            </if>
            
            <if test="indexId != null and indexId.length > 0">
                and (
                <foreach item="i" collection="indexId" open=""
								 separator="or" close=""> 
                	upper(index_id) = upper(#{i})
                </foreach>
                )
            </if>
            
            <if test="ipdsId != null and ipdsId.length > 0">
                and (
                <foreach item="i" collection="ipdsId" open=""
								 separator="or" close=""> 
                	ipds_id = #{i}
                </foreach>
                )
            </if>
            
            <!-- TODO: following three fields should be publication_year, waiting for fields to be added to DB -->
            <if test="year != null and year.length > 0">
            	and (
                <foreach item="y" collection="year" open=""
								 separator="or" close=""> 
                	PUBLICATION_YEAR = #{y}
               	</foreach>
                )
            </if>
            
            <if test="yearStart != null and yearStart.length > 0">
            	and (
                <foreach item="y" collection="yearStart" open=""
								 separator="or" close=""> 
                	PUBLICATION_YEAR &gt;= #{y}
               	</foreach>
                )
            </if>
            
            <if test="yearEnd != null and yearEnd.length > 0">
            	and (
                <foreach item="y" collection="yearEnd" open=""
								 separator="or" close=""> 
                	PUBLICATION_YEAR &lt;= #{y}
               	</foreach>
                )
            </if>
            
            <!-- TODO: refactor and split to mypubs and regular pubs versions -->
            <if test="contributingOffice != null and contributingOffice.length > 0">
                and publication_id in (
                	select publication_id 
                	from mp_pub_cost_center 
                	where cost_center_id in 
                		(select affiliation_id 
                		from affiliation 
                		where is_cost_center = 'Y' and
                		<foreach item="co" collection="contributingOffice" open="("
								 separator="or" close=")"> 
	                	 upper(name) like '%' || upper(#{co}) || '%'
	                	 )
                	 	</foreach>
					union
					select publication_id 
					from publication_cost_center 
					where cost_center_id in 
						(select affiliation_id 
						from affiliation 
						where is_cost_center = 'Y' and
						<foreach item="co" collection="contributingOffice" open="("
								 separator="or" close=")"> 
                	 	upper(name) like '%' || upper(#{co}) || '%'
                	 	)
                	 	</foreach>
                )
            </if>

            <if test="reportSeries != null and reportSeries.length > 0">
                and publication_series_id in (select publication_series_id 
               		from publication_series
               		where
               		<foreach item="r" collection="reportSeries" open=""
						 separator="or" close=""> 
                	 upper(name) like '%' || upper(#{r}) || '%'
                	 </foreach>
                	 )
            </if>
            
            <if test="reportNumber != null and reportNumber.length > 0">
            	and (
                <foreach item="r" collection="reportNumber" open=""
								 separator="or" close=""> 
                	upper(series_number) like '%' || upper(#{r}) || '%'
               	</foreach>
                )
            </if>
        </where>
    </sql>

    <sql id="baseSelect">
        select <include refid="cols"/>
            from all_publication
    </sql>

    <select id="getById" parameterType="Integer" resultMap="result">
        <include refid="baseSelect"/>
           where publication_id = #{value,jdbcType=VARCHAR}
    </select>

    <select id="getByMap" parameterType="map" resultMap="result">
        <include refid="base.pagingTop"/>
        <include refid="baseSelect"/>
        <include refid="filters"/>
        <include refid="base.orderBy"/>
        <include refid="base.pagingBottom"/>
    </select>

    <select id="getCount" parameterType="map" resultType="Integer">
        select count(*)
          from all_publication
        <include refid="filters"/>
    </select>

</mapper>
